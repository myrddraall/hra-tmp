$width: 7.6em;
$height: 4.8em;

// base layout
:host {
  font-size: var(--base-size);
  position: relative;
  display: inline-block;
  width: $width;
  height: $height;

  [content] {
    position: absolute;
  }
  [border] {
    position: relative;
  }

  &[interactive],
  &:host-context([interactive]) {
    cursor: pointer;
  }

  &[disabled],
  &.disabled,
  &:disabled {
    cursor: default;
  }
}
// boder image
:host {
  [border] {
    background-image: url(~/assets/ui/borders/end-ability-border-sheet.png);
    background-size: $width * 2 $height * 3;
    background-position:  #{-$width * 1} #{-$height * 0};
  }
}

// positioning
:host {
  [content] {
    //z-index: 5;

    top: 0.6em;
    left: 1.2em;
    ::ng-deep {
      > * {
        font-size: 0.7em;
      }
    }
  }
  [border] {
    width: 7.6em;
    height: 4.8em;
    top: 0em;
    left: 0em;
  }
}

// non interacive state
:host {
  [content] {
  }
  [border] {
    background-position:  #{-$width * 0} #{-$height * 1};
    // background-position: top right;
  }
  &[direction="right"]{
    [border] {
      background-position:  #{-$width * 1} #{-$height * 1};
    }
  }
}

// interacive state
:host {
  &:host-context([interactive]),
  &[interactive] {
    [content] {
      filter: grayscale(0.6);
    }
    [border] {
      background-position:  #{-$width * 0} #{-$height * 0};
    }
    &[direction="right"]{
      [border] {
        background-position:  #{-$width * 1} #{-$height * 0};
      }
    }
  }
}

// over state
:host {
  :host-context([interactive]:hover),
  :host-context([interactive][hover]),
  :host-context([interactive].hover),
  &[hover],
  &.hover,
  &[interactive]:hover {
    [content] {
      filter: grayscale(0);
    }
    [border] {
      //      background-position: top right;
      background-position:  #{-$width * 0} #{-$height * 1};
    }
    &[direction="right"]{
      [border] {
        background-position:  #{-$width * 1} #{-$height * 1};
      }
    }
  }
}

// selected state
:host {
  :host-context([selected]),
  :host-context(.selected),
  &[selected],
  &.selected {
    [content] {
      filter: grayscale(0) !important;
    }
    [border] {
      background-position:  #{-$width * 0} #{-$height * 1};
    }
    &[direction="right"]{
      [border] {
        background-position:  #{-$width * 1} #{-$height * 1};
      }
    }
  }
}

// disabled state
:host {
  :host-context([disabled]),
  :host-context(.disabled),
  :host-context(:disabled),
  &[disabled],
  &.disabled,
  &:disabled {
    [content] {
      filter: grayscale(0.9);
    }
    [border] {
      background-position:  #{-$width * 0} #{-$height * 2};
    }
    &[direction="right"]{
      [border] {
        background-position:  #{-$width * 1} #{-$height * 2};
      }
    }
  }
}
